import java.net.MalformedURLException;
import java.net.Socket;
import java.nio.channels.AlreadyBoundException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;

//Represents an agent that is going to be connected to the manager
public class Agent extends UnicastRemoteObject implements RMI_Int_Agent{

	private static final long serialVersionUID = 1L;
	static ArrayList<Integer> ports = new ArrayList<Integer>();
	static ArrayList<Integer> activePorts = new ArrayList<Integer>();
	
	public Agent() throws RemoteException {
		super();
	}
	
	public String getSelfName() {
		String name = "nom";
		return name;
	}

	public static ArrayList<Integer> Scanner(ArrayList<Integer> array) {
		ArrayList<Integer> ports_in_use = new ArrayList<Integer>();
		for (int i = 0; i < array.size(); i++) {
			int portAct = array.get(i);
			try {
				Socket sock = new Socket("localhost", portAct);
				System.out.println("lol");
				ports_in_use.add(portAct);
				sock.close();
			} catch(Exception e) {}
		}
		return ports_in_use;
	}
		
		
	public static void main(String[] args) throws RemoteException, MalformedURLException, AlreadyBoundException, java.rmi.AlreadyBoundException, NotBoundException  {
		
		// ============ CONFIGURATION ============
		ports.add(20); // apache
		ports.add(80); // http
		ports.add(443); // https
		// =======================================
		
		
		// only one agent needs to do this
		try {
			LocateRegistry.createRegistry(1099);
			System.out.println("Registry initiated");
		} catch (Exception e) {
			System.out.println("Registry already bound");
		}
		
		Naming.bind("Agent_connection", new Agent());
		activePorts = Scanner(ports);
		System.out.println(activePorts.get(0));
		System.out.println(activePorts.get(0));
		/*Naming.unbind("Agent_connection");
		System.out.println("Unbind done");*/
		
	}

}
